<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="p1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>